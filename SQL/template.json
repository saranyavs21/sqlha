{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "osDiskType": {
            "type": "string"
        },
        "osDiskDeleteOption": {
            "type": "string"
        },
        "dataDisks1": {
            "type": "array"
        },
        "dataDiskResources1": {
            "type": "array"
        },
        "dataDisks2": {
            "type": "array"
        },
        "dataDiskResources2": {
            "type": "array"
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "Location name of the virtual machine."
            }
        },
        "existingVirtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "Domain controller and new resources should be on same virtual network."
            }
        },
        "existingVirtualNetworkResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "Specify the resourcegroup for virtual network. Provide the resource group which contains Domain controller and virtual network. This can be different from the above resource group where the template resources like VMs are deployed."
            }
        },
        "availabilitySetName": {
            "type": "string",
            "metadata": {
                "description": "Creates a new availability set if it is not present. Check docs here: https://docs.microsoft.com/en-us/azure/virtual-machines/availability-set-overview"
            }
        },
        "vmNamesForPrimaryAndSecondaryReplicas": {
            "type": "array",
            "metadata": {
                "description": "Maximum number of replicas including primary = 9 , Example syntax: [\"vm1\",\"vm2\",\"vm3\"]. If these VMs already exist, they should have been created by this template, else failover cluster can't be created."
            }
        },
        "subnetNames": {
            "type": "array",
            "metadata": {
                "description": "Subnet names have to be distinct from one another and subnet list length must be equal to number of Replicas. Syntax example: [\"Subnet-1\",\"Subnet-2\",\"Subnet-3\"]. Docs: https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-manage-subnet#add-a-subnet"
            }
        },
        "listOfListenerIps": {
            "type": "array",
            "metadata": {
                "description": "Provide list of IPs for listener. Example syntax: [\"10.0.1.30\",\"10.0.2.30\",\"10.0.3.30\"].  Ensure these IPs are available from the respective Subnets."
            }
        },
        "listOfPublicIps": {
            "type": "array"
        },
        "publicIpAddressType": {
            "type": "string"
        },
        "publicIpAddressSku": {
            "type": "string"
        },
        "pipDeleteOption": {
            "type": "string"
        },
        "nicDeleteOption": {
            "type": "string"
        },
        "enableAcceleratedNetworking": {
            "type": "bool"
        },
        "networkSecurityGroupId": {
            "type": "string"
        },
        "replicaRoleArray": {
            "type": "array",
            "metadata": {
                "description": "Replica role setting."
            }
        },
        "replicaAutoFailArray": {
            "type": "array",
            "metadata": {
                "description": "Replica auto failover setting."
            }
        },
        "replicaSyncCommitArray": {
            "type": "array",
            "metadata": {
                "description": "Replica sync commit setting."
            }
        },
        "replicaReadableSecArray": {
            "type": "array",
            "metadata": {
                "description": "Replica readable secondary setting."
            }
        },
        "sizeForVirtualMachines": {
            "type": "string",
            "metadata": {
                "description": "Please select size from the list mentioned here: https://docs.microsoft.com/en-us/azure/templates/microsoft.compute/virtualmachines?tabs=bicep#hardwareprofile. Note that the same size will be applied to all the replicas."
            }
        },
        "localAdminUserName": {
            "type": "string",
            "metadata": {
                "description": "This account will be used as a local admin for virtual machines. Eg: localadmin"
            }
        },
        "localAdminPassword": {
            "type": "securestring"
        },
        "sqlServerImageType": {
            "type": "string",
            "metadata": {
                "description": "Select the version of SQL Server Image type. To use BYOL images, you need to have an Enterprise Agreement or Software Assurance (SA) for License mobility. https://docs.microsoft.com/en-us/azure/azure-sql/virtual-machines/windows/pricing-guidance?view=azuresql#byol"
            }
        },
        "sqlServerSku": {
            "type": "string",
            "metadata": {
                "description": "SQL Server Gallery Image SKU."
            }
        },
        "sqlServerLicenseType": {
            "type": "string",
            "metadata": {
                "description": "Specify the SQL Server License type for all VM's. PAYG : Pay As You Go, AHUB : Azure Hybrid Use Benefits. You should use [\"AHUB]\" if BYOL SQL image was used. If you have SQL Server licenses with Software Assurance(SA) or a SQL Server subscription, use Azure HybridBenefit to save."
            },
            "allowedValues": [
                "AHUB",
                "PAYG"
            ]
        },
        "sqlServiceAccountUserName": {
            "type": "string",
            "metadata": {
                "description": "This account is used for managing SQL servers on VMs. Eg: sqlserviceaccount"
            }
        },
        "isSqlServiceAccountGmsa": {
            "type": "string",
            "metadata": {
                "description": "Specify if the domain account under which SQL Server service will run is GMSA."
            }
        },
        "sqlServiceAccountPassword": {
            "type": "securestring"
        },
        "domainUserName": {
            "type": "string",
            "metadata": {
                "description": "This account is used to create FCI name in Active directory and join VMs to Domain. Eg: DomainAdmin"
            }
        },
        "domainUserPassword": {
            "type": "securestring"
        },
        "domainFQDN": {
            "type": "string",
            "metadata": {
                "description": "Domain FQDN where the virtual machine will be joined"
            }
        },
        "failoverClusterName": {
            "type": "string",
            "metadata": {
                "description": "Specify the Windows Failover Cluster Name. Maximum length is 15."
            },
            "maxLength": 15
        },
        "createNewStorageAccount": {
            "type": "string",
            "metadata": {
                "description": "Creates new storage account for cloud witness."
            }
        },
        "storageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Enter existing storage account if you have chosen false in the above option. Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only."
            },
            "maxLength": 24,
            "minLength": 3
        },
        "storageAccountResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Specify the name of the storage account resource group to be used for creating Cloud Witness for Windows server failover cluster."
            },
            "maxLength": 90
        },
        "availabilityGroup": {
            "type": "string",
            "metadata": {
                "description": "Ensure there is no AG with same name registered with domain controller."
            }
        },
        "listenerName": {
            "type": "string",
            "metadata": {
                "description": "Maximum length of AG Listener is 15. Ensure a listener with same name doesn't exist with domain controller."
            },
            "maxLength": 15
        },
        "sqlConnectivityType": {
            "type": "string"
        },
        "sqlPortNumber": {
            "type": "int"
        },
        "sqlAuthenticationLogin": {
            "type": "string"
        },
        "sqlAuthenticationPassword": {
            "type": "securestring"
        },
        "sqlStorageDisksConfigurationType": {
            "type": "string"
        },
        "sqlStorageWorkloadType": {
            "type": "string"
        },
        "dataPath": {
            "type": "string"
        },
        "dataDisksLUNs": {
            "type": "array"
        },
        "logPath": {
            "type": "string"
        },
        "logDisksLUNs": {
            "type": "array"
        },
        "tempDbPath": {
            "type": "string"
        },
        "dataFileCount": {
            "type": "int"
        },
        "dataFileSize": {
            "type": "int"
        },
        "dataGrowth": {
            "type": "int"
        },
        "logGrowth": {
            "type": "int"
        },
        "logFileSize": {
            "type": "int"
        },
        "tempDisksLUNs": {
            "type": "array"
        },
        "sqlSystemDbOnDataDisk": {
            "type": "bool"
        },
        "maxdop": {
            "type": "int"
        },
        "isOptimizeForAdHocWorkloadsEnabled": {
            "type": "bool"
        },
        "collation": {
            "type": "string"
        },
        "minServerMemoryMB": {
            "type": "int"
        },
        "maxServerMemoryMB": {
            "type": "int"
        },
        "isLPIMEnabled": {
            "type": "bool"
        },
        "isIFIEnabled": {
            "type": "bool"
        }
    },
    "variables": {
        "shortDomain": "[toUpper(split(parameters('domainFQDN'), '.')[0])]",
        "validParameters": "[and(equals(length(parameters('vmNamesForPrimaryAndSecondaryReplicas')), length(parameters('subnetNames'))) ,\n                      equals(length(parameters('vmNamesForPrimaryAndSecondaryReplicas')), length(parameters('listOfListenerIps'))))]",
        "sqlImageArray": "[split(parameters('sqlServerImageType'),'-')]",
        "failoverSQLServerImageType": "[concat(substring(variables('sqlImageArray')[0],0,7),'-',variables('sqlImageArray')[1])]",
        "existingVmResourceGroup": "[resourceGroup().name]"
    },
    "resources": [
        {
            "condition": "[variables('validParameters')]",
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[parameters('availabilitySetName')]",
            "apiVersion": "2022-08-01",
            "location": "[parameters('location')]",
            "tags": {},
            "sku": {
                "name": "ALIGNED"
            },
            "properties": {
                "platformUpdateDomainCount": "5",
                "platformFaultDomainCount": "2"
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "[concat('Create-SQLVM_8a54240a8f9a4137ae9bec16fa4a9979', '-', uniqueString(concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name)), '-', copyIndex())]",
            "apiVersion": "2019-03-01",
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "Inner"
                },
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "osDiskType": {
                            "type": "string"
                        },
                        "osDiskDeleteOption": {
                            "type": "string"
                        },
                        "dataDisks1": {
                            "type": "array"
                        },
                        "dataDiskResources1": {
                            "type": "array"
                        },
                        "dataDisks2": {
                            "type": "array"
                        },
                        "dataDiskResources2": {
                            "type": "array"
                        },
                        "publicIpAddressName": {
                            "type": "string"
                        },
                        "publicIpAddressType": {
                            "type": "string",
                            "allowedValues": [
                                "Static",
                                "static"
                            ]
                        },
                        "publicIpAddressSku": {
                            "type": "string"
                        },
                        "networkSecurityGroupId": {
                            "type": "string"
                        },
                        "availabilitySetName": {
                            "type": "string"
                        },
                        "location": {
                            "type": "string"
                        },
                        "index": {
                            "type": "int"
                        },
                        "networkInterfaceName": {
                            "type": "string"
                        },
                        "enableAcceleratedNetworking": {
                            "type": "bool"
                        },
                        "subnetName": {
                            "type": "string"
                        },
                        "virtualNetworkId": {
                            "type": "string"
                        },
                        "pipDeleteOption": {
                            "type": "string",
                            "allowedValues": [
                                "Delete",
                                "Detach"
                            ]
                        },
                        "nicDeleteOption": {
                            "type": "string",
                            "allowedValues": [
                                "Delete",
                                "Detach"
                            ]
                        },
                        "virtualMachineName": {
                            "type": "string"
                        },
                        "virtualMachineComputerName": {
                            "type": "string"
                        },
                        "virtualMachineSize": {
                            "type": "string"
                        },
                        "localAdminUserName": {
                            "type": "string"
                        },
                        "localAdminPassword": {
                            "type": "securestring"
                        },
                        "patchMode": {
                            "type": "string"
                        },
                        "enableHotpatching": {
                            "type": "bool"
                        },
                        "sqlVirtualMachineLocation": {
                            "type": "string"
                        },
                        "sqlVirtualMachineName": {
                            "type": "string"
                        },
                        "sqlServerImageType": {
                            "type": "string"
                        },
                        "sqlServerSku": {
                            "type": "string"
                        },
                        "sqlServerLicenseType": {
                            "type": "string"
                        },
                        "sqlServerImagePublisher": {
                            "type": "string"
                        },
                        "existingVirtualNetworkResourceGroupName": {
                            "type": "string"
                        },
                        "sqlConnectivityType": {
                            "type": "string"
                        },
                        "sqlPortNumber": {
                            "type": "int"
                        },
                        "sqlAuthenticationLogin": {
                            "type": "string"
                        },
                        "sqlAuthenticationPassword": {
                            "type": "securestring"
                        },
                        "sqlStorageDisksConfigurationType": {
                            "type": "string"
                        },
                        "sqlStorageWorkloadType": {
                            "type": "string"
                        },
                        "dataPath": {
                            "type": "string"
                        },
                        "dataDisksLUNs": {
                            "type": "array"
                        },
                        "logPath": {
                            "type": "string"
                        },
                        "logDisksLUNs": {
                            "type": "array"
                        },
                        "tempDbPath": {
                            "type": "string"
                        },
                        "dataFileCount": {
                            "type": "int"
                        },
                        "dataFileSize": {
                            "type": "int"
                        },
                        "dataGrowth": {
                            "type": "int"
                        },
                        "logGrowth": {
                            "type": "int"
                        },
                        "logFileSize": {
                            "type": "int"
                        },
                        "tempDisksLUNs": {
                            "type": "array"
                        },
                        "sqlSystemDbOnDataDisk": {
                            "type": "bool"
                        },
                        "maxdop": {
                            "type": "int"
                        },
                        "isOptimizeForAdHocWorkloadsEnabled": {
                            "type": "bool"
                        },
                        "collation": {
                            "type": "string"
                        },
                        "minServerMemoryMB": {
                            "type": "int"
                        },
                        "maxServerMemoryMB": {
                            "type": "int"
                        },
                        "isLPIMEnabled": {
                            "type": "bool"
                        },
                        "isIFIEnabled": {
                            "type": "bool"
                        }
                    },
                    "variables": {
                        "nsgId": "[parameters('networkSecurityGroupId')]",
                        "vnetId": "[parameters('virtualNetworkId')]",
                        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]"
                    },
                    "resources": [
                        {
                            "name": "[parameters('publicIpAddressName')]",
                            "type": "Microsoft.Network/publicIpAddresses",
                            "apiVersion": "2020-08-01",
                            "location": "[parameters('location')]",
                            "tags": {},
                            "properties": {
                                "publicIpAllocationMethod": "[parameters('publicIpAddressType')]"
                            },
                            "sku": {
                                "name": "[parameters('publicIpAddressSku')]"
                            }
                        },
                        {
                            "name": "[parameters('networkInterfaceName')]",
                            "type": "Microsoft.Network/networkInterfaces",
                            "apiVersion": "2021-08-01",
                            "location": "[parameters('location')]",
                            "tags": {},
                            "properties": {
                                "ipConfigurations": [
                                    {
                                        "name": "ipconfig1",
                                        "properties": {
                                            "subnet": {
                                                "id": "[variables('subnetRef')]"
                                            },
                                            "privateIPAllocationMethod": "static",
                                            "publicIpAddress": {
                                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName'))]",
                                                "properties": {
                                                    "deleteOption": "[parameters('pipDeleteOption')]"
                                                }
                                            }
                                        }
                                    }
                                ],
                                "networkSecurityGroup": {
                                    "id": "[variables('nsgId')]"
                                },
                                "enableAcceleratedNetworking": "[parameters('enableAcceleratedNetworking')]"
                            },
                            "dependsOn": [
                                "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName'))]"
                            ]
                        },
                        {
                            "name": "[parameters('virtualMachineName')]",
                            "type": "Microsoft.Compute/virtualMachines",
                            "apiVersion": "2022-03-01",
                            "location": "[parameters('location')]",
                            "tags": {},
                            "properties": {
                                "hardwareProfile": {
                                    "vmSize": "[parameters('virtualMachineSize')]"
                                },
                                "storageProfile": {
                                    "osDisk": {
                                        "createOption": "fromImage",
                                        "managedDisk": {
                                            "storageAccountType": "[parameters('osDiskType')]"
                                        },
                                        "deleteOption": "[parameters('osDiskDeleteOption')]"
                                    },
                                    "imageReference": {
                                        "publisher": "microsoftsqlserver",
                                        "offer": "sql2022-ws2022",
                                        "sku": "enterprise-gen2",
                                        "version": "latest"
                                    },
                                    "copy": [
                                        {
                                            "name": "dataDisks",
                                            "count": "[length(parameters(concat('dataDisks', string(add(parameters('index'), 1)))))]",
                                            "input": {
                                                "lun": "[parameters(concat('dataDisks', string(add(parameters('index'), 1))))[copyIndex('dataDisks')].lun]",
                                                "createOption": "[parameters(concat('dataDisks', string(add(parameters('index'), 1))))[copyIndex('dataDisks')].createOption]",
                                                "caching": "[parameters(concat('dataDisks', string(add(parameters('index'), 1))))[copyIndex('dataDisks')].caching]",
                                                "diskSizeGB": "[parameters(concat('dataDisks', string(add(parameters('index'), 1))))[copyIndex('dataDisks')].diskSizeGB]",
                                                "managedDisk": {
                                                    "id": "[coalesce(parameters(concat('dataDisks', string(add(parameters('index'), 1))))[copyIndex('dataDisks')].id, if(equals(parameters(concat('dataDisks', string(add(parameters('index'), 1))))[copyIndex('dataDisks')].name, json('null')), json('null'), resourceId('Microsoft.Compute/disks', parameters(concat('dataDisks', string(add(parameters('index'), 1))))[copyIndex('dataDisks')].name)))]",
                                                    "storageAccountType": "[parameters(concat('dataDisks', string(add(parameters('index'), 1))))[copyIndex('dataDisks')].storageAccountType]"
                                                },
                                                "deleteOption": "[parameters(concat('dataDisks', string(add(parameters('index'), 1))))[copyIndex('dataDisks')].deleteOption]",
                                                "writeAcceleratorEnabled": "[parameters(concat('dataDisks', string(add(parameters('index'), 1))))[copyIndex('dataDisks')].writeAcceleratorEnabled]"
                                            }
                                        }
                                    ]
                                },
                                "osProfile": {
                                    "computerName": "[parameters('virtualMachineComputerName')]",
                                    "adminUsername": "[parameters('localAdminUserName')]",
                                    "adminPassword": "[parameters('localAdminPassword')]",
                                    "windowsConfiguration": {
                                        "enableAutomaticUpdates": true,
                                        "provisionVmAgent": true,
                                        "patchSettings": {
                                            "enableHotpatching": "[parameters('enableHotpatching')]",
                                            "patchMode": "[parameters('patchMode')]"
                                        }
                                    }
                                },
                                "networkProfile": {
                                    "networkInterfaces": [
                                        {
                                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]",
                                            "properties": {
                                                "deleteOption": "[parameters('nicDeleteOption')]"
                                            }
                                        }
                                    ]
                                },
                                "diagnosticsProfile": {
                                    "bootDiagnostics": {
                                        "enabled": true
                                    }
                                },
                                "availabilitySet": {
                                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
                                }
                            },
                            "dependsOn": [
                                "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName'))]",
                                "managedDiskResources"
                            ]
                        },
                        {
                            "name": "[parameters('virtualMachineName')]",
                            "type": "Microsoft.SqlVirtualMachine/SqlVirtualMachines",
                            "apiVersion": "2023-01-01-preview",
                            "location": "[parameters('location')]",
                            "tags": {},
                            "properties": {
                                "virtualMachineResourceId": "[resourceId(resourceGroup().name,'Microsoft.Compute/virtualMachines', trim(parameters('virtualMachineName')))]",
                                "sqlManagement": "Full",
                                "sqlServerLicenseType": "[parameters('sqlServerLicenseType')]",
                                "StorageConfigurationSettings": {
                                    "DiskConfigurationType": "[parameters('sqlStorageDisksConfigurationType')]",
                                    "StorageWorkloadType": "[parameters('sqlStorageWorkloadType')]",
                                    "SQLDataSettings": {
                                        "LUNs": "[parameters('dataDisksLUNs')]",
                                        "DefaultFilePath": "[parameters('dataPath')]"
                                    },
                                    "SQLLogSettings": {
                                        "LUNs": "[parameters('logDisksLUNs')]",
                                        "DefaultFilePath": "[parameters('logPath')]"
                                    },
                                    "SQLTempDbSettings": {
                                        "DefaultFilePath": "[parameters('tempDbPath')]",
                                        "DataFileCount": "[parameters('dataFileCount')]",
                                        "DataFileSize": "[parameters('dataFileSize')]",
                                        "DataGrowth": "[parameters('dataGrowth')]",
                                        "LogFileSize": "[parameters('logFileSize')]",
                                        "LogGrowth": "[parameters('logGrowth')]",
                                        "LUNs": "[parameters('tempDisksLUNs')]"
                                    },
                                    "SQLSystemDbOnDataDisk": "[parameters('sqlSystemDbOnDataDisk')]"
                                },
                                "ServerConfigurationsManagementSettings": {
                                    "SQLConnectivityUpdateSettings": {
                                        "ConnectivityType": "[parameters('sqlConnectivityType')]",
                                        "Port": "[parameters('sqlPortNumber')]",
                                        "SQLAuthUpdateUserName": "[parameters('sqlAuthenticationLogin')]",
                                        "SQLAuthUpdatePassword": "[parameters('sqlAuthenticationPassword')]"
                                    },
                                    "SQLInstanceSettings": {
                                        "maxdop": "[parameters('maxdop')]",
                                        "isOptimizeForAdHocWorkloadsEnabled": "[parameters('isOptimizeForAdHocWorkloadsEnabled')]",
                                        "collation": "[parameters('collation')]",
                                        "minServerMemoryMB": "[parameters('minServerMemoryMB')]",
                                        "maxServerMemoryMB": "[parameters('maxServerMemoryMB')]",
                                        "isLPIMEnabled": "[parameters('isLPIMEnabled')]",
                                        "isIFIEnabled": "[parameters('isIFIEnabled')]"
                                    }
                                }
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]"
                            ]
                        },
                        {
                            "name": "[parameters(concat('dataDiskResources', string(add(parameters('index'), 1))))[copyIndex()].name]",
                            "type": "Microsoft.Compute/disks",
                            "apiVersion": "2022-03-02",
                            "location": "[parameters('location')]",
                            "properties": "[parameters(concat('dataDiskResources', string(add(parameters('index'), 1))))[copyIndex()].properties]",
                            "sku": {
                                "name": "[parameters(concat('dataDiskResources', string(add(parameters('index'), 1))))[copyIndex()].sku]"
                            },
                            "copy": {
                                "name": "managedDiskResources",
                                "count": "[length(parameters(concat('dataDiskResources', string(add(parameters('index'), 1)))))]"
                            },
                            "tags": {}
                        }
                    ],
                    "outputs": {
                        "adminUsername": {
                            "type": "string",
                            "value": "[parameters('localAdminUserName')]"
                        }
                    }
                },
                "parameters": {
                    "osDiskType": {
                        "value": "Premium_LRS"
                    },
                    "osDiskDeleteOption": {
                        "value": "Delete"
                    },
                    "dataDisks1": {
                        "value": [
                            {
                                "lun": 0,
                                "createOption": "attach",
                                "deleteOption": "Detach",
                                "caching": "ReadOnly",
                                "writeAcceleratorEnabled": false,
                                "id": null,
                                "name": "sqlvm1_DataDisk_0",
                                "storageAccountType": null,
                                "diskSizeGB": null,
                                "diskEncryptionSet": null
                            }
                        ]
                    },
                    "dataDiskResources1": {
                        "value": [
                            {
                                "name": "sqlvm1_DataDisk_0",
                                "sku": "Premium_LRS",
                                "properties": {
                                    "diskSizeGB": 64,
                                    "creationData": {
                                        "createOption": "empty"
                                    }
                                }
                            }
                        ]
                    },
                    "dataDisks2": {
                        "value": [
                            {
                                "lun": 0,
                                "createOption": "attach",
                                "deleteOption": "Detach",
                                "caching": "ReadOnly",
                                "writeAcceleratorEnabled": false,
                                "id": null,
                                "name": "sqlvm2_DataDisk_0",
                                "storageAccountType": null,
                                "diskSizeGB": null,
                                "diskEncryptionSet": null
                            }
                        ]
                    },
                    "dataDiskResources2": {
                        "value": [
                            {
                                "name": "sqlvm2_DataDisk_0",
                                "sku": "Premium_LRS",
                                "properties": {
                                    "diskSizeGB": 64,
                                    "creationData": {
                                        "createOption": "empty"
                                    }
                                }
                            }
                        ]
                    },
                    "publicIpAddressName": {
                        "value": "[parameters('listOfPublicIps')[copyIndex()]]"
                    },
                    "publicIpAddressType": {
                        "value": "[parameters('publicIpAddressType')]"
                    },
                    "publicIpAddressSku": {
                        "value": "[parameters('publicIpAddressSku')]"
                    },
                    "networkSecurityGroupId": {
                        "value": "[parameters('networkSecurityGroupId')]"
                    },
                    "availabilitySetName": {
                        "value": "[parameters('availabilitySetName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "index": {
                        "value": "[copyIndex()]"
                    },
                    "networkInterfaceName": {
                        "value": "[concat(parameters('vmNamesForPrimaryAndSecondaryReplicas')[copyIndex()],'-ni')]"
                    },
                    "enableAcceleratedNetworking": {
                        "value": "[parameters('enableAcceleratedNetworking')]"
                    },
                    "subnetName": {
                        "value": "[parameters('subnetNames')[copyIndex()]]"
                    },
                    "virtualNetworkId": {
                        "value": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('existingVirtualNetworkResourceGroupName'), '/providers/Microsoft.Network/virtualNetworks/', parameters('existingVirtualNetworkName'))]"
                    },
                    "pipDeleteOption": {
                        "value": "[parameters('pipDeleteOption')]"
                    },
                    "nicDeleteOption": {
                        "value": "[parameters('nicDeleteOption')]"
                    },
                    "virtualMachineName": {
                        "value": "[parameters('vmNamesForPrimaryAndSecondaryReplicas')[copyIndex()]]"
                    },
                    "virtualMachineComputerName": {
                        "value": "[parameters('vmNamesForPrimaryAndSecondaryReplicas')[copyIndex()]]"
                    },
                    "virtualMachineSize": {
                        "value": "[parameters('sizeForVirtualMachines')]"
                    },
                    "localAdminUserName": {
                        "value": "[parameters('localAdminUserName')]"
                    },
                    "localAdminPassword": {
                        "value": "[parameters('localAdminPassword')]"
                    },
                    "patchMode": {
                        "value": "AutomaticByOS"
                    },
                    "enableHotpatching": {
                        "value": false
                    },
                    "sqlVirtualMachineLocation": {
                        "value": "[parameters('location')]"
                    },
                    "sqlVirtualMachineName": {
                        "value": "[parameters('vmNamesForPrimaryAndSecondaryReplicas')[copyIndex()]]"
                    },
                    "sqlServerImageType": {
                        "value": "[parameters('sqlServerImageType')]"
                    },
                    "sqlServerSku": {
                        "value": "[parameters('sqlServerSku')]"
                    },
                    "sqlServerLicenseType": {
                        "value": "[parameters('sqlServerLicenseType')]"
                    },
                    "sqlServerImagePublisher": {
                        "value": "microsoftsqlserver"
                    },
                    "existingVirtualNetworkResourceGroupName": {
                        "value": "[parameters('existingVirtualNetworkResourceGroupName')]"
                    },
                    "sqlConnectivityType": {
                        "value": "[parameters('sqlConnectivityType')]"
                    },
                    "sqlPortNumber": {
                        "value": "[parameters('sqlPortNumber')]"
                    },
                    "sqlAuthenticationLogin": {
                        "value": "[parameters('sqlAuthenticationLogin')]"
                    },
                    "sqlAuthenticationPassword": {
                        "value": "[parameters('sqlAuthenticationPassword')]"
                    },
                    "sqlStorageDisksConfigurationType": {
                        "value": "[parameters('sqlStorageDisksConfigurationType')]"
                    },
                    "sqlStorageWorkloadType": {
                        "value": "[parameters('sqlStorageWorkloadType')]"
                    },
                    "dataPath": {
                        "value": "[parameters('dataPath')]"
                    },
                    "dataDisksLUNs": {
                        "value": "[parameters('dataDisksLUNs')]"
                    },
                    "logPath": {
                        "value": "[parameters('logPath')]"
                    },
                    "logDisksLUNs": {
                        "value": "[parameters('logDisksLUNs')]"
                    },
                    "tempDbPath": {
                        "value": "[parameters('tempDbPath')]"
                    },
                    "dataFileCount": {
                        "value": "[parameters('dataFileCount')]"
                    },
                    "dataFileSize": {
                        "value": "[parameters('dataFileSize')]"
                    },
                    "dataGrowth": {
                        "value": "[parameters('dataGrowth')]"
                    },
                    "logGrowth": {
                        "value": "[parameters('logGrowth')]"
                    },
                    "logFileSize": {
                        "value": "[parameters('logFileSize')]"
                    },
                    "tempDisksLUNs": {
                        "value": "[parameters('tempDisksLUNs')]"
                    },
                    "sqlSystemDbOnDataDisk": {
                        "value": "[parameters('sqlSystemDbOnDataDisk')]"
                    },
                    "maxdop": {
                        "value": "[parameters('maxdop')]"
                    },
                    "isOptimizeForAdHocWorkloadsEnabled": {
                        "value": "[parameters('isOptimizeForAdHocWorkloadsEnabled')]"
                    },
                    "collation": {
                        "value": "[parameters('collation')]"
                    },
                    "minServerMemoryMB": {
                        "value": "[parameters('minServerMemoryMB')]"
                    },
                    "maxServerMemoryMB": {
                        "value": "[parameters('maxServerMemoryMB')]"
                    },
                    "isLPIMEnabled": {
                        "value": "[parameters('isLPIMEnabled')]"
                    },
                    "isIFIEnabled": {
                        "value": "[parameters('isIFIEnabled')]"
                    }
                }
            },
            "dependsOn": [
                "[parameters('availabilitySetName')]"
            ],
            "condition": "[variables('validParameters')]",
            "copy": {
                "name": "Create-SQLVM",
                "count": "[length(parameters('vmNamesForPrimaryAndSecondaryReplicas'))]",
                "mode": "parallel"
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "Join-the-domain_8569bbfe8f1f48f08ecf7eb2eed6f5a8",
            "apiVersion": "2019-03-01",
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "Inner"
                },
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "vmArray": {
                            "type": "array",
                            "metadata": {
                                "description": "Array of virtual machines to be domain joined, if using multiple VMs. E.g. ['VM01', 'VM02', 'VM03']."
                            }
                        },
                        "location": {
                            "type": "string",
                            "metadata": {
                                "description": "Location name of the virtual machine."
                            }
                        },
                        "domainJoinUserName": {
                            "type": "string",
                            "metadata": {
                                "description": "Domain NetBiosName plus User name of a domain user with sufficient rights to perfom domain join operation. E.g. domain\\username"
                            }
                        },
                        "domainJoinUserPassword": {
                            "type": "securestring",
                            "metadata": {
                                "description": "Domain user password."
                            }
                        },
                        "domainFQDN": {
                            "type": "string",
                            "metadata": {
                                "description": "Domain FQDN where the virtual machine will be joined"
                            }
                        },
                        "ouPath": {
                            "type": "string",
                            "metadata": {
                                "description": "Specifies an organizational unit (OU) for the domain account. Enter the full distinguished name of the OU in quotation marks. Example: \"OU=testOU; DC=domain; DC=Domain; DC=com\""
                            },
                            "defaultValue": ""
                        }
                    },
                    "variables": {
                        "domainJoinOptions": 3
                    },
                    "resources": [
                        {
                            "comments": "Join domain - JsonADDomainExtension",
                            "name": "[concat(trim(parameters('vmArray')[copyIndex()]),'/joindomain')]",
                            "type": "Microsoft.Compute/virtualMachines/extensions",
                            "apiVersion": "2021-03-01",
                            "location": "[parameters('location')]",
                            "tags": {},
                            "copy": {
                                "name": "vmDomainJoinCopy",
                                "count": "[length(parameters('vmArray'))]"
                            },
                            "properties": {
                                "publisher": "Microsoft.Compute",
                                "type": "JsonADDomainExtension",
                                "typeHandlerVersion": "1.3",
                                "autoUpgradeMinorVersion": true,
                                "settings": {
                                    "Name": "[parameters('domainFQDN')]",
                                    "User": "[parameters('domainJoinUserName')]",
                                    "Restart": "true",
                                    "Options": "[variables('domainJoinOptions')]",
                                    "OUPath": ""
                                },
                                "protectedSettings": {
                                    "Password": "[parameters('domainJoinUserPassword')]"
                                }
                            }
                        }
                    ],
                    "outputs": {}
                },
                "parameters": {
                    "vmArray": {
                        "value": "[parameters('vmNamesForPrimaryAndSecondaryReplicas')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "domainJoinUserName": {
                        "value": "[concat(variables('shortDomain'),'\\',parameters('domainUserName'))]"
                    },
                    "domainJoinUserPassword": {
                        "value": "[parameters('domainUserPassword')]"
                    },
                    "domainFQDN": {
                        "value": "[parameters('domainFQDN')]"
                    },
                    "ouPath": {
                        "value": ""
                    }
                }
            },
            "dependsOn": [
                "Create-SQLVM"
            ],
            "condition": "[variables('validParameters')]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "Failover-Cluster_b0b04e5f79f5435aaa1641a5c0f9af25",
            "apiVersion": "2019-03-01",
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "Inner"
                },
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "failoverClusterName": {
                            "type": "string",
                            "metadata": {
                                "description": "Specify the Windows Failover Cluster Name. Maximum length is 15."
                            },
                            "maxLength": 15
                        },
                        "existingVmArray": {
                            "type": "array",
                            "metadata": {
                                "description": "Specify array of names of SQL Server VM's to participate in the Availability Group (e.g. ['SQLVM1', 'SQLVM2'] ). OS underneath should be at least WS 2016. Maximum number is 9."
                            }
                        },
                        "sqlServerLicenseType": {
                            "type": "string",
                            "metadata": {
                                "description": "Specify the SQL Server License type for all VM's. PAYG : Pay As You Go, AHUB : Azure Hybrid Use Benefits. You should use [\"AHUB]\" if BYOL SQL image was used. If you have SQL Server licenses with Software Assurance(SA) or a SQL Server subscription, use Azure HybridBenefit to save."
                            },
                            "allowedValues": [
                                "AHUB",
                                "PAYG"
                            ]
                        },
                        "existingVmResourceGroup": {
                            "type": "string",
                            "metadata": {
                                "description": "Specify resourcegroup name for existing Vms."
                            },
                            "defaultValue": "[variables('existingVmResourceGroup')]"
                        },
                        "sqlServerImageType": {
                            "type": "string",
                            "metadata": {
                                "description": "Select the version of SQL Server Image type. To use BYOL images, you need to have an Enterprise Agreement or Software Assurance (SA) for License mobility. https://docs.microsoft.com/en-us/azure/azure-sql/virtual-machines/windows/pricing-guidance?view=azuresql#byol"
                            }
                        },
                        "sqlServerSku": {
                            "type": "string"
                        },
                        "existingFullyQualifiedDomainName": {
                            "type": "string",
                            "metadata": {
                                "description": "Specify the Fully Qualified Domain Name under which the Failover Cluster will be created. The VM's should already be joined to it. (e.g. contoso.com)"
                            }
                        },
                        "existingOuPath": {
                            "type": "string",
                            "metadata": {
                                "description": "Specify an optional Organizational Unit (OU) on AD Domain where the CNO (Computer Object for Cluster Name) will be created (e.g. OU=testou,OU=testou2,DC=contoso,DC=com). Default is empty."
                            },
                            "defaultValue": ""
                        },
                        "existingSqlServiceAccount": {
                            "type": "string",
                            "metadata": {
                                "description": "Specify the domain account under which SQL Server service will run for AG setup in UPN format. (e.g. sqlservice@contoso.com)"
                            }
                        },
                        "gmsaFlag": {
                            "type": "string",
                            "metadata": {
                                "description": "Specify if the domain account under which SQL Server service will run is GMSA."
                            }
                        },
                        "sqlServicePassword": {
                            "type": "securestring",
                            "metadata": {
                                "description": "Specify the password for Sql Server service account."
                            }
                        },
                        "cloudWitnessName": {
                            "type": "string",
                            "metadata": {
                                "description": "Specify the name of the storage account to be used for creating Cloud Witness for Windows server failover cluster."
                            },
                            "defaultValue": "[concat('clwitness', uniqueString(resourceGroup().id))]"
                        },
                        "storageAccountResourceGroup": {
                            "type": "string",
                            "metadata": {
                                "description": "Specify the name of the storage account resource group to be used for creating Cloud Witness for Windows server failover cluster."
                            }
                        },
                        "_artifactsLocation": {
                            "type": "string",
                            "metadata": {
                                "description": "Location of resources that the script is dependent on such as linked templates and DSC modules."
                            },
                            "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/quickstarts/microsoft.sqlvirtualmachine/sql-vm-ag-setup/"
                        },
                        "_artifactsLocationSasToken": {
                            "type": "securestring",
                            "metadata": {
                                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
                            },
                            "defaultValue": ""
                        },
                        "location": {
                            "type": "string",
                            "metadata": {
                                "description": "Location name of the virtual machine."
                            }
                        },
                        "clusterBootstrapAccount": {
                            "type": "string",
                            "metadata": {
                                "description": "Specify the account for WS failover cluster creation in UPN format (e.g. example@contoso.com). This account can either be a Domain Admin or at least have permissions to create Computer Objects in default or specified OU."
                            }
                        },
                        "clusterBootstrapAccountPassword": {
                            "type": "securestring"
                        },
                        "createNewStorageAccount": {
                            "type": "bool"
                        },
                        "sqlConnectivityType": {
                            "type": "string"
                        },
                        "sqlPortNumber": {
                            "type": "int"
                        },
                        "sqlAuthenticationLogin": {
                            "type": "string"
                        },
                        "sqlAuthenticationPassword": {
                            "type": "securestring"
                        },
                        "sqlStorageDisksConfigurationType": {
                            "type": "string"
                        },
                        "sqlStorageWorkloadType": {
                            "type": "string"
                        },
                        "dataPath": {
                            "type": "string"
                        },
                        "dataDisksLUNs": {
                            "type": "array"
                        },
                        "logPath": {
                            "type": "string"
                        },
                        "logDisksLUNs": {
                            "type": "array"
                        },
                        "tempDbPath": {
                            "type": "string"
                        },
                        "dataFileCount": {
                            "type": "int"
                        },
                        "dataFileSize": {
                            "type": "int"
                        },
                        "dataGrowth": {
                            "type": "int"
                        },
                        "logGrowth": {
                            "type": "int"
                        },
                        "logFileSize": {
                            "type": "int"
                        },
                        "tempDisksLUNs": {
                            "type": "array"
                        },
                        "sqlSystemDbOnDataDisk": {
                            "type": "bool"
                        },
                        "maxdop": {
                            "type": "int"
                        },
                        "isOptimizeForAdHocWorkloadsEnabled": {
                            "type": "bool"
                        },
                        "collation": {
                            "type": "string"
                        },
                        "minServerMemoryMB": {
                            "type": "int"
                        },
                        "maxServerMemoryMB": {
                            "type": "int"
                        },
                        "isLPIMEnabled": {
                            "type": "bool"
                        },
                        "isIFIEnabled": {
                            "type": "bool"
                        }
                    },
                    "variables": {
                        "groupResourceId": "[resourceId('Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups', parameters('failoverClusterName'))]"
                    },
                    "resources": [
                        {
                            "condition": "[parameters('createNewStorageAccount')]",
                            "name": "[parameters('cloudWitnessName')]",
                            "type": "Microsoft.Storage/storageAccounts",
                            "apiVersion": "2021-09-01",
                            "location": "[parameters('location')]",
                            "tags": {},
                            "sku": {
                                "name": "Standard_LRS"
                            },
                            "kind": "StorageV2",
                            "properties": {
                                "accessTier": "Hot",
                                "supportsHttpsTrafficOnly": true
                            }
                        },
                        {
                            "name": "[parameters('failoverClusterName')]",
                            "type": "Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups",
                            "apiVersion": "2023-01-01-preview",
                            "location": "[parameters('location')]",
                            "tags": {},
                            "properties": {
                                "SqlImageOffer": "[parameters('sqlServerImageType')]",
                                "SqlImageSku": "[if(equals(toLower(parameters('sqlServerSku')),'sqldev'),'Developer', parameters('sqlServerSku'))]",
                                "WsfcDomainProfile": {
                                    "DomainFqdn": "[parameters('existingFullyQualifiedDomainName')]",
                                    "OuPath": "",
                                    "ClusterBootstrapAccount": "[parameters('clusterBootstrapAccount')]",
                                    "ClusterOperatorAccount": "[parameters('clusterBootstrapAccount')]",
                                    "SqlServiceAccount": "[parameters('existingSqlServiceAccount')]",
                                    "IsSqlServiceAccountGmsa": "[parameters('gmsaFlag')]",
                                    "StorageAccountUrl": "[reference(resourceId(subscription().subscriptionId, parameters('storageAccountResourceGroup'),'Microsoft.Storage/storageAccounts', parameters('cloudWitnessName')), '2018-07-01').primaryEndpoints['blob']]",
                                    "StorageAccountPrimaryKey": "[listKeys(resourceId(subscription().subscriptionId, parameters('storageAccountResourceGroup'),'Microsoft.Storage/storageAccounts', parameters('cloudWitnessName')), '2018-07-01').keys[0].value]",
                                    "clusterSubnetType": "multisubnet"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Resources/deployments",
                            "name": "joincluster_6ad7aea090b147c6923f9a88132312ab",
                            "apiVersion": "2019-03-01",
                            "properties": {
                                "expressionEvaluationOptions": {
                                    "scope": "Inner"
                                },
                                "mode": "Incremental",
                                "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {
                                        "location": {
                                            "type": "string"
                                        },
                                        "existingVirtualMachineNames": {
                                            "type": "array"
                                        },
                                        "sqlServerLicenseType": {
                                            "type": "string"
                                        },
                                        "existingVmResourceGroup": {
                                            "type": "string"
                                        },
                                        "groupResourceId": {
                                            "type": "string"
                                        },
                                        "sqlServicePassword": {
                                            "type": "securestring"
                                        },
                                        "clusterBootstrapAccountPassword": {
                                            "type": "securestring"
                                        }
                                    },
                                    "variables": {},
                                    "resources": [
                                        {
                                            "name": "[trim(parameters('existingVirtualMachineNames')[copyIndex()])]",
                                            "type": "Microsoft.SqlVirtualMachine/SqlVirtualMachines",
                                            "apiVersion": "2023-01-01-preview",
                                            "location": "[parameters('location')]",
                                            "tags": {},
                                            "copy": {
                                                "name": "vmToClusterLoop",
                                                "count": "[length(parameters('existingVirtualMachineNames'))]"
                                            },
                                            "properties": {
                                                "virtualMachineResourceId": "[resourceId(parameters('existingVmResourceGroup'),'Microsoft.Compute/virtualMachines', trim(parameters('existingVirtualMachineNames')[copyIndex()]))]",
                                                "SqlVirtualMachineGroupResourceId": "[parameters('groupResourceId')]",
                                                "WSFCDomainCredentials": {
                                                    "ClusterBootstrapAccountPassword": "[parameters('clusterBootstrapAccountPassword')]",
                                                    "ClusterOperatorAccountPassword": "[parameters('clusterBootstrapAccountPassword')]",
                                                    "SqlServiceAccountPassword": "[parameters('sqlServicePassword')]"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": {}
                                },
                                "parameters": {
                                    "location": {
                                        "value": "[parameters('location')]"
                                    },
                                    "existingVirtualMachineNames": {
                                        "value": "[parameters('existingVmArray')]"
                                    },
                                    "sqlServerLicenseType": {
                                        "value": "[parameters('sqlServerLicenseType')]"
                                    },
                                    "existingVmResourceGroup": {
                                        "value": "[parameters('existingVmResourceGroup')]"
                                    },
                                    "groupResourceId": {
                                        "value": "[variables('groupResourceId')]"
                                    },
                                    "sqlServicePassword": {
                                        "value": "[parameters('sqlServicePassword')]"
                                    },
                                    "clusterBootstrapAccountPassword": {
                                        "value": "[parameters('clusterBootstrapAccountPassword')]"
                                    }
                                }
                            },
                            "dependsOn": [
                                "[parameters('failoverClusterName')]",
                                "[parameters('cloudWitnessName')]"
                            ]
                        }
                    ],
                    "outputs": {}
                },
                "parameters": {
                    "failoverClusterName": {
                        "value": "[parameters('failoverClusterName')]"
                    },
                    "existingVmArray": {
                        "value": "[parameters('vmNamesForPrimaryAndSecondaryReplicas')]"
                    },
                    "sqlServerLicenseType": {
                        "value": "[parameters('sqlServerLicenseType')]"
                    },
                    "existingVmResourceGroup": {
                        "value": "[variables('existingVmResourceGroup')]"
                    },
                    "sqlServerImageType": {
                        "value": "[variables('failoverSQLServerImageType')]"
                    },
                    "sqlServerSku": {
                        "value": "[parameters('sqlServerSku')]"
                    },
                    "existingFullyQualifiedDomainName": {
                        "value": "[parameters('domainFQDN')]"
                    },
                    "existingOuPath": {
                        "value": ""
                    },
                    "existingSqlServiceAccount": {
                        "value": "[parameters('sqlServiceAccountUserName')]"
                    },
                    "gmsaFlag": {
                        "value": "[parameters('isSqlServiceAccountGmsa')]"
                    },
                    "sqlServicePassword": {
                        "value": "[parameters('sqlServiceAccountPassword')]"
                    },
                    "cloudWitnessName": {
                        "value": "[parameters('storageAccountName')]"
                    },
                    "storageAccountResourceGroup": {
                        "value": "[parameters('storageAccountResourceGroup')]"
                    },
                    "_artifactsLocation": {
                        "value": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/quickstarts/microsoft.sqlvirtualmachine/sql-vm-ag-setup/"
                    },
                    "_artifactsLocationSasToken": {
                        "value": ""
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "clusterBootstrapAccount": {
                        "value": "[concat(parameters('domainUserName'),'@',parameters('domainFQDN'))]"
                    },
                    "clusterBootstrapAccountPassword": {
                        "value": "[parameters('domainUserPassword')]"
                    },
                    "createNewStorageAccount": {
                        "value": "[if(equals(toLower(parameters('createNewStorageAccount')), 'yes'), true(), false())]"
                    },
                    "sqlConnectivityType": {
                        "value": "[parameters('sqlConnectivityType')]"
                    },
                    "sqlPortNumber": {
                        "value": "[parameters('sqlPortNumber')]"
                    },
                    "sqlAuthenticationLogin": {
                        "value": "[parameters('sqlAuthenticationLogin')]"
                    },
                    "sqlAuthenticationPassword": {
                        "value": "[parameters('sqlAuthenticationPassword')]"
                    },
                    "sqlStorageDisksConfigurationType": {
                        "value": "[parameters('sqlStorageDisksConfigurationType')]"
                    },
                    "sqlStorageWorkloadType": {
                        "value": "[parameters('sqlStorageWorkloadType')]"
                    },
                    "dataPath": {
                        "value": "[parameters('dataPath')]"
                    },
                    "dataDisksLUNs": {
                        "value": "[parameters('dataDisksLUNs')]"
                    },
                    "logPath": {
                        "value": "[parameters('logPath')]"
                    },
                    "logDisksLUNs": {
                        "value": "[parameters('logDisksLUNs')]"
                    },
                    "tempDbPath": {
                        "value": "[parameters('tempDbPath')]"
                    },
                    "dataFileCount": {
                        "value": "[parameters('dataFileCount')]"
                    },
                    "dataFileSize": {
                        "value": "[parameters('dataFileSize')]"
                    },
                    "dataGrowth": {
                        "value": "[parameters('dataGrowth')]"
                    },
                    "logGrowth": {
                        "value": "[parameters('logGrowth')]"
                    },
                    "logFileSize": {
                        "value": "[parameters('logFileSize')]"
                    },
                    "tempDisksLUNs": {
                        "value": "[parameters('tempDisksLUNs')]"
                    },
                    "sqlSystemDbOnDataDisk": {
                        "value": "[parameters('sqlSystemDbOnDataDisk')]"
                    },
                    "maxdop": {
                        "value": "[parameters('maxdop')]"
                    },
                    "isOptimizeForAdHocWorkloadsEnabled": {
                        "value": "[parameters('isOptimizeForAdHocWorkloadsEnabled')]"
                    },
                    "collation": {
                        "value": "[parameters('collation')]"
                    },
                    "minServerMemoryMB": {
                        "value": "[parameters('minServerMemoryMB')]"
                    },
                    "maxServerMemoryMB": {
                        "value": "[parameters('maxServerMemoryMB')]"
                    },
                    "isLPIMEnabled": {
                        "value": "[parameters('isLPIMEnabled')]"
                    },
                    "isIFIEnabled": {
                        "value": "[parameters('isIFIEnabled')]"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments/', 'Join-the-domain_8569bbfe8f1f48f08ecf7eb2eed6f5a8')]"
            ],
            "condition": "[variables('validParameters')]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "AG-Listener_d3cb701822d043f38fa86bc4f3c3780e",
            "apiVersion": "2019-03-01",
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "Inner"
                },
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "existingFailoverClusterName": {
                            "type": "string",
                            "metadata": {
                                "description": ""
                            }
                        },
                        "existingVmArray": {
                            "type": "array",
                            "metadata": {
                                "description": "Specify array of names of SQL Server VM's to participate in the Availability Group (e.g. ['SQLVM1', 'SQLVM2'] ). OS underneath should be at least WS 2016. Maximum number is 9."
                            }
                        },
                        "existingVnet": {
                            "type": "string",
                            "metadata": {
                                "description": "Specify the virtual network for Listener IP Address."
                            }
                        },
                        "existingSubnetArray": {
                            "type": "array",
                            "metadata": {
                                "description": "Provide the subnet array."
                            }
                        },
                        "ListenerIpArray": {
                            "type": "array",
                            "metadata": {
                                "description": "Specify the available private IP address for the listener from all the subnets."
                            }
                        },
                        "Listener": {
                            "type": "string",
                            "metadata": {
                                "description": "Specify a name for the listener for SQL Availability Group."
                            },
                            "defaultValue": "aglistener"
                        },
                        "ListenerPort": {
                            "type": "int",
                            "metadata": {
                                "description": "Specify the port for listener."
                            },
                            "defaultValue": 1433
                        },
                        "sqlAvailabilityGroup": {
                            "type": "string",
                            "defaultValue": "sqlAG"
                        },
                        "location": {
                            "type": "string",
                            "metadata": {
                                "description": "Location name of the virtual machine."
                            }
                        },
                        "existingVirtualNetworkResourceGroupName": {
                            "type": "string",
                            "metadata": {
                                "description": "Specify the resourcegroup for virtual network. Provide the resource group which contains Domain controller and virtual network. This can be different from the above resource group where the template resources like VMs are deployed."
                            },
                            "defaultValue": "[parameters('existingVirtualNetworkResourceGroupName')]"
                        },
                        "replicaRoleArray": {
                            "type": "array",
                            "metadata": {
                                "description": "Replica role setting."
                            }
                        },
                        "replicaAutoFailArray": {
                            "type": "array",
                            "metadata": {
                                "description": "Replica auto failover setting."
                            }
                        },
                        "replicaSyncCommitArray": {
                            "type": "array",
                            "metadata": {
                                "description": "Replica sync commit setting."
                            }
                        },
                        "replicaReadableSecArray": {
                            "type": "array",
                            "metadata": {
                                "description": "Replica readable secondary setting."
                            }
                        }
                    },
                    "variables": {},
                    "resources": [
                        {
                            "name": "[concat(parameters('existingFailoverClusterName'), '/', parameters('Listener'))]",
                            "type": "Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups/availabilityGroupListeners",
                            "apiVersion": "2023-01-01-preview",
                            "location": "[parameters('location')]",
                            "tags": {},
                            "properties": {
                                "AvailabilityGroupName": "[parameters('sqlAvailabilityGroup')]",
                                "AvailabilityGroupConfiguration": {
                                    "copy": [
                                        {
                                            "name": "Replicas",
                                            "count": "[length(parameters('existingVmArray'))]",
                                            "input": {
                                                "sqlVirtualMachineInstanceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/', parameters('existingVmArray')[copyIndex('Replicas')] )]",
                                                "role": "[parameters('replicaRoleArray')[copyIndex('Replicas')]]",
                                                "failover": "[parameters('replicaAutoFailArray')[copyIndex('Replicas')]]",
                                                "commit": "[parameters('replicaSyncCommitArray')[copyIndex('Replicas')]]",
                                                "readableSecondary": "[parameters('replicaReadableSecArray')[copyIndex('Replicas')]]"
                                            }
                                        }
                                    ]
                                },
                                "copy": [
                                    {
                                        "name": "multiSubnetIpConfigurations",
                                        "count": "[length(parameters('existingVmArray'))]",
                                        "input": {
                                            "privateIpAddress": {
                                                "ipAddress": "[parameters('ListenerIpArray')[copyIndex('multiSubnetIpConfigurations')]]",
                                                "subnetResourceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('existingVirtualNetworkResourceGroupName'), '/providers/Microsoft.Network/virtualNetworks/', parameters('existingVnet'), '/subnets/', parameters('existingSubnetArray')[copyIndex('multiSubnetIpConfigurations')] )]"
                                            },
                                            "sqlVirtualMachineInstance": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/', parameters('existingVmArray')[copyIndex('multiSubnetIpConfigurations')] )]"
                                        }
                                    }
                                ],
                                "Port": "[parameters('ListenerPort')]"
                            }
                        }
                    ],
                    "outputs": {}
                },
                "parameters": {
                    "existingFailoverClusterName": {
                        "value": "[parameters('failoverClusterName')]"
                    },
                    "existingVmArray": {
                        "value": "[parameters('vmNamesForPrimaryAndSecondaryReplicas')]"
                    },
                    "existingVnet": {
                        "value": "[parameters('existingVirtualNetworkName')]"
                    },
                    "existingSubnetArray": {
                        "value": "[parameters('subnetNames')]"
                    },
                    "ListenerIpArray": {
                        "value": "[parameters('listOfListenerIps')]"
                    },
                    "Listener": {
                        "value": "[parameters('listenerName')]"
                    },
                    "ListenerPort": {
                        "value": 1433
                    },
                    "sqlAvailabilityGroup": {
                        "value": "[parameters('availabilityGroup')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "existingVirtualNetworkResourceGroupName": {
                        "value": "[parameters('existingVirtualNetworkResourceGroupName')]"
                    },
                    "replicaRoleArray": {
                        "value": "[parameters('replicaRoleArray')]"
                    },
                    "replicaAutoFailArray": {
                        "value": "[parameters('replicaAutoFailArray')]"
                    },
                    "replicaSyncCommitArray": {
                        "value": "[parameters('replicaSyncCommitArray')]"
                    },
                    "replicaReadableSecArray": {
                        "value": "[parameters('replicaReadableSecArray')]"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments/', 'Failover-Cluster_b0b04e5f79f5435aaa1641a5c0f9af25')]"
            ],
            "condition": "[variables('validParameters')]"
        }
    ],
    "outputs": {
        "errors": {
            "type": "string",
            "value": "[if(variables('validParameters'), '', 'Array size of subnetNames, listOfListenerIps, VMNamesForPrimaryAndSecondaryReplicas should be equal')]"
        }
    }
}
